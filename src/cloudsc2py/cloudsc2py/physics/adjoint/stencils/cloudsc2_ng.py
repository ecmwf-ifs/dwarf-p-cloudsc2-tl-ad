# -*- coding: utf-8 -*-
from gt4py import gtscript

from cloudsc2py.framework.stencil import stencil_collection
from cloudsc2py.utils.f2py import ported_function


@ported_function(
    from_file="cloudsc2_ad/cloudsc2ad.F90", from_line=346, to_line=1740
)
@stencil_collection(
    "cloudsc2_ad_ng",
    external_names=[
        "RCPD",
        "RLMLT",
        "RLSTT",
        "RLVTT",
        "RVTMP2",
        "cloudsc2_ad_0",
        "cloudsc2_ad_1",
    ],
)
def cloudsc2_ad_def(
    in_eta: gtscript.Field[gtscript.K, "ftype"],
    in_ap: gtscript.Field["ftype"],
    in_aph: gtscript.Field["ftype"],
    in_t: gtscript.Field["ftype"],
    in_q: gtscript.Field["ftype"],
    in_qsat: gtscript.Field["ftype"],
    in_ql: gtscript.Field["ftype"],
    in_qi: gtscript.Field["ftype"],
    in_lu: gtscript.Field["ftype"],
    in_lude: gtscript.Field["ftype"],
    in_mfd: gtscript.Field["ftype"],
    in_mfu: gtscript.Field["ftype"],
    in_supsat: gtscript.Field["ftype"],
    in_tnd_cml_t: gtscript.Field["ftype"],
    in_tnd_t_i: gtscript.Field["ftype"],
    in_tnd_cml_q: gtscript.Field["ftype"],
    in_tnd_q_i: gtscript.Field["ftype"],
    in_tnd_cml_ql: gtscript.Field["ftype"],
    in_tnd_ql_i: gtscript.Field["ftype"],
    in_tnd_cml_qi: gtscript.Field["ftype"],
    in_tnd_qi_i: gtscript.Field["ftype"],
    in_clc_i: gtscript.Field["ftype"],
    in_fhpsl_i: gtscript.Field["ftype"],
    in_fhpsn_i: gtscript.Field["ftype"],
    in_fplsl_i: gtscript.Field["ftype"],
    in_fplsn_i: gtscript.Field["ftype"],
    in_covptot_i: gtscript.Field["ftype"],
    tmp_trpaus: gtscript.Field[gtscript.IJ, "ftype"],
    out_ap_i: gtscript.Field["ftype"],
    out_aph_i: gtscript.Field["ftype"],
    out_t_i: gtscript.Field["ftype"],
    out_q_i: gtscript.Field["ftype"],
    out_qsat_i: gtscript.Field["ftype"],
    out_ql_i: gtscript.Field["ftype"],
    out_qi_i: gtscript.Field["ftype"],
    out_lu_i: gtscript.Field["ftype"],
    out_lude_i: gtscript.Field["ftype"],
    out_mfd_i: gtscript.Field["ftype"],
    out_mfu_i: gtscript.Field["ftype"],
    out_supsat_i: gtscript.Field["ftype"],
    out_tnd_t: gtscript.Field["ftype"],
    out_tnd_cml_t_i: gtscript.Field["ftype"],
    out_tnd_q: gtscript.Field["ftype"],
    out_tnd_cml_q_i: gtscript.Field["ftype"],
    out_tnd_ql: gtscript.Field["ftype"],
    out_tnd_cml_ql_i: gtscript.Field["ftype"],
    out_tnd_qi: gtscript.Field["ftype"],
    out_tnd_cml_qi_i: gtscript.Field["ftype"],
    out_clc: gtscript.Field["ftype"],
    out_fhpsl: gtscript.Field["ftype"],
    out_fhpsn: gtscript.Field["ftype"],
    out_fplsl: gtscript.Field["ftype"],
    out_fplsn: gtscript.Field["ftype"],
    out_covptot: gtscript.Field["ftype"],
    *,
    dt: "ftype",
):
    from __externals__ import ext

    with computation(FORWARD), interval(0, -1):
        # first guess values for T
        t = in_t + dt * in_tnd_cml_t
        # store trajectory arrays for adjoint
        t2 = t + 0

    # eta value at tropopause
    with computation(FORWARD), interval(0, 1):
        tmp_trpaus = 0.1
    with computation(FORWARD), interval(0, -2):
        if in_eta[0] > 0.1 and in_eta[0] < 0.4 and t[0, 0, 0] > t[0, 0, 1]:
            tmp_trpaus = in_eta[0]

    with computation(FORWARD):
        with interval(0, 1):
            (
                out_tnd_t,
                out_tnd_q,
                out_tnd_ql,
                out_tnd_qi,
                out_clc,
                out_covptot,
                b,
                beta,
                clc,
                cldi,
                cldl,
                condi1,
                condi2,
                condl1,
                condl2,
                cons,
                cor,
                corqs,
                covpclr,
                covpclr1,
                covptot1,
                covptot,
                crh2,
                dp,
                dpr,
                dpr1,
                dq,
                dqc,
                dqsdtemp,
                dqsdz,
                dr1,
                dr2,
                dtdzmo,
                dtgdp,
                esdp1,
                evapr,
                evaps,
                fac,
                fac1,
                fac2,
                fac3,
                faci,
                facw,
                foeew,
                fwat,
                fwatr1,
                fwatr2,
                gdp,
                itmp11,
                itmp12,
                itmp2,
                ldcp,
                lfdcp,
                lo3,
                lsdcp,
                ltmp1,
                ltmp2,
                lude,
                lvdcp,
                preclr,
                preclr1,
                prr,
                prs,
                prtot,
                q,
                q2,
                qc3,
                qcd,
                qcrit,
                qe,
                qiwc1,
                qlim,
                qlwc1,
                qold,
                qold1,
                qpd,
                qsat,
                qt,
                rho,
                rfl,
                rfln2,
                rfreeze1,
                rfreeze3,
                rodqsdp,
                scalm,
                sfl,
                sfln2,
                snmlt,
                supsat,
                t,
                t3,
                tmp3,
                told,
                z2s,
            ) = ext.cloudsc2_ad_0(
                in_eta,
                in_ap,
                in_aph,
                in_q,
                in_qsat,
                in_ql,
                in_qi,
                in_lu,
                in_lude,
                in_mfd,
                in_mfu,
                in_supsat,
                in_tnd_cml_q,
                in_tnd_cml_ql,
                in_tnd_cml_qi,
                tmp_trpaus,
                dt,
                covptot=0.0,
                rfl=0.0,
                sfl=0.0,
                t=t,
            )
            out_fhpsl = 0.0
            out_fhpsn = 0.0
        with interval(1, -1):
            (
                out_tnd_t,
                out_tnd_q,
                out_tnd_ql,
                out_tnd_qi,
                out_clc,
                out_covptot,
                b,
                beta,
                clc,
                cldi,
                cldl,
                condi1,
                condi2,
                condl1,
                condl2,
                cons,
                cor,
                corqs,
                covpclr,
                covpclr1,
                covptot1,
                covptot,
                crh2,
                dp,
                dpr,
                dpr1,
                dq,
                dqc,
                dqsdtemp,
                dqsdz,
                dr1,
                dr2,
                dtdzmo,
                dtgdp,
                esdp1,
                evapr,
                evaps,
                fac,
                fac1,
                fac2,
                fac3,
                faci,
                facw,
                foeew,
                fwat,
                fwatr1,
                fwatr2,
                gdp,
                itmp11,
                itmp12,
                itmp2,
                ldcp,
                lfdcp,
                lo3,
                lsdcp,
                ltmp1,
                ltmp2,
                lude,
                lvdcp,
                preclr,
                preclr1,
                prr,
                prs,
                prtot,
                q,
                q2,
                qc3,
                qcd,
                qcrit,
                qe,
                qiwc1,
                qlim,
                qlwc1,
                qold,
                qold1,
                qpd,
                qsat,
                qt,
                rho,
                rfl,
                rfln2,
                rfreeze1,
                rfreeze3,
                rodqsdp,
                scalm,
                sfl,
                sfln2,
                snmlt,
                supsat,
                t,
                t3,
                tmp3,
                told,
                z2s,
            ) = ext.cloudsc2_ad_0(
                in_eta,
                in_ap,
                in_aph,
                in_q,
                in_qsat,
                in_ql,
                in_qi,
                in_lu,
                in_lude,
                in_mfd,
                in_mfu,
                in_supsat,
                in_tnd_cml_q,
                in_tnd_cml_ql,
                in_tnd_cml_qi,
                tmp_trpaus,
                dt,
                covptot=covptot[0, 0, -1],
                rfl=rfl[0, 0, -1],
                sfl=sfl[0, 0, -1],
                t=t,
            )
            out_fplsl = rfl[0, 0, -1]
            out_fplsn = sfl[0, 0, -1]
            out_fhpsl = -out_fplsl * ext.RLVTT
            out_fhpsn = -out_fplsn * ext.RLSTT
        with interval(-1, None):
            out_fplsl = rfl[0, 0, -1]
            out_fplsn = sfl[0, 0, -1]
            out_fhpsl = -out_fplsl * ext.RLVTT
            out_fhpsn = -out_fplsn * ext.RLSTT

    with computation(BACKWARD):
        with interval(-1, None):
            fplsn_i = in_fplsn_i - in_fhpsn_i * ext.RLSTT
            fplsl_i = in_fplsl_i - in_fhpsl_i * ext.RLVTT
        with interval(-2, -1):
            (
                out_ap_i,
                out_aph_i,
                out_t_i,
                out_q_i,
                out_qsat_i,
                out_ql_i,
                out_qi_i,
                out_lude_i,
                out_mfd_i,
                out_mfu_i,
                aph_s,
                aph_i_s,
                covptot_i,
                daph_i,
                dlu_i,
                dp_i,
                lfdcp_i,
                lsdcp_i,
                lvdcp_i,
                rfl_i,
                sfl_i,
            ) = ext.cloudsc2_ad_1(
                in_ap,
                in_aph,
                in_qsat,
                in_lu,
                in_lude,
                in_mfd,
                in_mfu,
                in_tnd_t_i,
                in_tnd_q_i,
                in_tnd_ql_i,
                in_tnd_qi_i,
                in_clc_i,
                in_covptot_i,
                in_fhpsl_i,
                in_fhpsn_i,
                in_fplsl_i,
                in_fplsn_i,
                out_clc,
                dt,
                aph_s=in_aph[0, 0, 1],
                aph_i_s=0.0,
                b=b,
                beta=beta,
                clc=clc,
                cldi=cldi,
                cldl=cldl,
                condi1=condi1,
                condi2=condi2,
                condl1=condl1,
                condl2=condl2,
                cons=cons,
                cor=cor,
                corqs=corqs,
                covpclr=covpclr,
                covpclr1=covpclr1,
                covptot=covptot,
                covptot_i=0.0,
                covptot1=covptot1,
                crh2=crh2,
                dp=dp,
                dpr=dpr,
                dpr1=dpr1,
                dq=dq,
                dqc=dqc,
                dqsdtemp=dqsdtemp,
                dqsdz=dqsdz,
                dr1=dr1,
                dr2=dr2,
                dtdzmo=dtdzmo,
                dtgdp=dtgdp,
                esdp1=esdp1,
                evapr=evapr,
                evaps=evaps,
                fac=fac,
                fac1=fac1,
                fac2=fac2,
                fac3=fac3,
                faci=faci,
                facw=facw,
                foeew=foeew,
                fplsl_i=fplsl_i,
                fplsn_i=fplsn_i,
                fwat=fwat,
                fwatr1=fwatr1,
                fwatr2=fwatr2,
                gdp=gdp,
                itmp11=itmp11,
                itmp12=itmp12,
                itmp2=itmp2,
                ldcp=ldcp,
                lfdcp=lfdcp,
                lo3=lo3,
                lsdcp=lsdcp,
                ltmp1=ltmp1,
                ltmp2=ltmp2,
                lude=lude,
                lvdcp=lvdcp,
                on_last_level=True,
                preclr=preclr,
                preclr1=preclr1,
                prr=prr,
                prs=prs,
                prtot=prtot,
                q=q,
                q2=q2,
                qc3=qc3,
                qcd=qcd,
                qcrit=qcrit,
                qe=qe,
                qiwc1=qiwc1,
                qlim=qlim,
                qlwc1=qlwc1,
                qold=qold,
                qold1=qold1,
                qpd=qpd,
                qsat=qsat,
                qt=qt,
                rfl_i=0.0,
                rfln2=rfln2,
                rfreeze1=rfreeze1,
                rfreeze3=rfreeze3,
                rho=rho,
                rodqsdp=rodqsdp,
                scalm=scalm,
                sfl=sfl[0, 0, -1],
                sfl_i=0.0,
                sfln2=sfln2,
                snmlt=snmlt,
                supsat=supsat,
                t=t,
                t2=t2,
                t3=t3,
                tmp3=tmp3,
                told=told,
                z2s=z2s,
            )
            fplsn_i = in_fplsn_i - in_fhpsn_i * ext.RLSTT
            fplsl_i = in_fplsl_i - in_fhpsl_i * ext.RLVTT
        with interval(1, -2):
            (
                out_ap_i,
                out_aph_i,
                out_t_i,
                out_q_i,
                out_qsat_i,
                out_ql_i,
                out_qi_i,
                out_lude_i,
                out_mfd_i,
                out_mfu_i,
                aph_s,
                aph_i_s,
                covptot_i,
                daph_i,
                dlu_i,
                dp_i,
                lfdcp_i,
                lsdcp_i,
                lvdcp_i,
                rfl_i,
                sfl_i,
            ) = ext.cloudsc2_ad_1(
                in_ap,
                in_aph,
                in_qsat,
                in_lu,
                in_lude,
                in_mfd,
                in_mfu,
                in_tnd_t_i,
                in_tnd_q_i,
                in_tnd_ql_i,
                in_tnd_qi_i,
                in_clc_i,
                in_covptot_i,
                in_fhpsl_i,
                in_fhpsn_i,
                in_fplsl_i,
                in_fplsn_i,
                out_clc,
                dt,
                aph_s=aph_s[0, 0, 1],
                aph_i_s=aph_i_s[0, 0, 1],
                b=b,
                beta=beta,
                clc=clc,
                cldi=cldi,
                cldl=cldl,
                condi1=condi1,
                condi2=condi2,
                condl1=condl1,
                condl2=condl2,
                cons=cons,
                cor=cor,
                corqs=corqs,
                covpclr=covpclr,
                covpclr1=covpclr1,
                covptot=covptot,
                covptot_i=covptot_i[0, 0, 1],
                covptot1=covptot1,
                crh2=crh2,
                dp=dp,
                dpr=dpr,
                dpr1=dpr1,
                dq=dq,
                dqc=dqc,
                dqsdtemp=dqsdtemp,
                dqsdz=dqsdz,
                dr1=dr1,
                dr2=dr2,
                dtdzmo=dtdzmo,
                dtgdp=dtgdp,
                esdp1=esdp1,
                evapr=evapr,
                evaps=evaps,
                fac=fac,
                fac1=fac1,
                fac2=fac2,
                fac3=fac3,
                faci=faci,
                facw=facw,
                foeew=foeew,
                fplsl_i=fplsl_i,
                fplsn_i=fplsn_i,
                fwat=fwat,
                fwatr1=fwatr1,
                fwatr2=fwatr2,
                gdp=gdp,
                itmp11=itmp11,
                itmp12=itmp12,
                itmp2=itmp2,
                ldcp=ldcp,
                lfdcp=lfdcp,
                lo3=lo3,
                lsdcp=lsdcp,
                ltmp1=ltmp1,
                ltmp2=ltmp2,
                lude=lude,
                lvdcp=lvdcp,
                on_last_level=False,
                preclr=preclr,
                preclr1=preclr1,
                prr=prr,
                prs=prs,
                prtot=prtot,
                q=q,
                q2=q2,
                qc3=qc3,
                qcd=qcd,
                qcrit=qcrit,
                qe=qe,
                qiwc1=qiwc1,
                qlim=qlim,
                qlwc1=qlwc1,
                qold=qold,
                qold1=qold1,
                qpd=qpd,
                qsat=qsat,
                qt=qt,
                rfl_i=rfl_i[0, 0, 1],
                rfln2=rfln2,
                rfreeze1=rfreeze1,
                rfreeze3=rfreeze3,
                rho=rho,
                rodqsdp=rodqsdp,
                scalm=scalm,
                sfl=sfl[0, 0, -1],
                sfl_i=sfl_i[0, 0, 1],
                sfln2=sfln2,
                snmlt=snmlt,
                supsat=supsat,
                t=t,
                t2=t2,
                t3=t3,
                tmp3=tmp3,
                told=told,
                z2s=z2s,
            )
            fplsn_i = in_fplsn_i - in_fhpsn_i * ext.RLSTT
            fplsl_i = in_fplsl_i - in_fhpsl_i * ext.RLVTT
        with interval(0, 1):
            (
                out_ap_i,
                out_aph_i,
                out_t_i,
                out_q_i,
                out_qsat_i,
                out_ql_i,
                out_qi_i,
                out_lude_i,
                out_mfd_i,
                out_mfu_i,
                aph_s,
                aph_i_s,
                covptot_i,
                daph_i,
                dlu_i,
                dp_i,
                lfdcp_i,
                lsdcp_i,
                lvdcp_i,
                rfl_i,
                sfl_i,
            ) = ext.cloudsc2_ad_1(
                in_ap,
                in_aph,
                in_qsat,
                in_lu,
                in_lude,
                in_mfd,
                in_mfu,
                in_tnd_t_i,
                in_tnd_q_i,
                in_tnd_ql_i,
                in_tnd_qi_i,
                in_clc_i,
                in_covptot_i,
                in_fhpsl_i,
                in_fhpsn_i,
                in_fplsl_i,
                in_fplsn_i,
                out_clc,
                dt,
                aph_s=aph_s[0, 0, 1],
                aph_i_s=aph_i_s[0, 0, 1],
                b=b,
                beta=beta,
                clc=clc,
                cldi=cldi,
                cldl=cldl,
                condi1=condi1,
                condi2=condi2,
                condl1=condl1,
                condl2=condl2,
                cons=cons,
                cor=cor,
                corqs=corqs,
                covpclr=covpclr,
                covpclr1=covpclr1,
                covptot=covptot,
                covptot_i=covptot_i[0, 0, 1],
                covptot1=covptot1,
                crh2=crh2,
                dp=dp,
                dpr=dpr,
                dpr1=dpr1,
                dq=dq,
                dqc=dqc,
                dqsdtemp=dqsdtemp,
                dqsdz=dqsdz,
                dr1=dr1,
                dr2=dr2,
                dtdzmo=dtdzmo,
                dtgdp=dtgdp,
                esdp1=esdp1,
                evapr=evapr,
                evaps=evaps,
                fac=fac,
                fac1=fac1,
                fac2=fac2,
                fac3=fac3,
                faci=faci,
                facw=facw,
                foeew=foeew,
                fplsl_i=fplsl_i,
                fplsn_i=fplsn_i,
                fwat=fwat,
                fwatr1=fwatr1,
                fwatr2=fwatr2,
                gdp=gdp,
                itmp11=itmp11,
                itmp12=itmp12,
                itmp2=itmp2,
                ldcp=ldcp,
                lfdcp=lfdcp,
                lo3=lo3,
                lsdcp=lsdcp,
                ltmp1=ltmp1,
                ltmp2=ltmp2,
                lude=lude,
                lvdcp=lvdcp,
                on_last_level=False,
                preclr=preclr,
                preclr1=preclr1,
                prr=prr,
                prs=prs,
                prtot=prtot,
                q=q,
                q2=q2,
                qc3=qc3,
                qcd=qcd,
                qcrit=qcrit,
                qe=qe,
                qiwc1=qiwc1,
                qlim=qlim,
                qlwc1=qlwc1,
                qold=qold,
                qold1=qold1,
                qpd=qpd,
                qsat=qsat,
                qt=qt,
                rfl_i=rfl_i[0, 0, 1],
                rfln2=rfln2,
                rfreeze1=rfreeze1,
                rfreeze3=rfreeze3,
                rho=rho,
                rodqsdp=rodqsdp,
                scalm=scalm,
                sfl=0.0,
                sfl_i=sfl_i[0, 0, 1],
                sfln2=sfln2,
                snmlt=snmlt,
                supsat=supsat,
                t=t,
                t2=t2,
                t3=t3,
                tmp3=tmp3,
                told=told,
                z2s=z2s,
            )

    with computation(FORWARD), interval(1, None):
        aph_i_s = aph_i_s[0, 0, -1]

    with computation(BACKWARD):
        with interval(-1, None):
            # out_aph_i += dp_i[0, 0, -1] - daph_i[0, 0, -1]
            out_aph_i = aph_i_s[0, 0, 0] + dp_i[0, 0, -1]
        with interval(1, -1):
            out_aph_i += -dp_i[0, 0, 0] + dp_i[0, 0, -1] - daph_i[0, 0, -1]
            out_lu_i = -dlu_i

            zz = (
                ext.RLVTT * lvdcp_i + ext.RLSTT * lsdcp_i + ext.RLMLT * lfdcp_i
            )
            out_q_i -= (
                zz
                * ext.RCPD
                * ext.RVTMP2
                / (ext.RCPD + ext.RCPD * ext.RVTMP2 * q) ** 2
            )
            out_supsat_i = dt * out_q_i
            out_tnd_cml_t_i = dt * out_t_i
            out_tnd_cml_q_i = dt * out_q_i
            out_tnd_cml_ql_i = dt * out_ql_i
            out_tnd_cml_qi_i = dt * out_qi_i
        with interval(0, 1):
            out_aph_i += -dp_i[0, 0, 0]
            out_lu_i = 0.0

            zz = (
                ext.RLVTT * lvdcp_i + ext.RLSTT * lsdcp_i + ext.RLMLT * lfdcp_i
            )
            out_q_i -= (
                zz
                * ext.RCPD
                * ext.RVTMP2
                / (ext.RCPD + ext.RCPD * ext.RVTMP2 * q) ** 2
            )
            out_supsat_i = dt * out_q_i
            out_tnd_cml_t_i = dt * out_t_i
            out_tnd_cml_q_i = dt * out_q_i
            out_tnd_cml_ql_i = dt * out_ql_i
            out_tnd_cml_qi_i = dt * out_qi_i
